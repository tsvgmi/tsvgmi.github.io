.row.bg-light
  .col-md-6
    - pname    = (sentry[:pname] || sentry[:name]).force_encoding('UTF-8')
    - pstyle   = (sentry[:style] || '').downcase
    - href     = sentry[:lyric_url]
    - lyric_id = "lyric_#{index}"
    - btype    = StyleColor[pstyle] || 'secondary'
    - sclass   = "small badge badge-#{btype}"
    %h2
      %a.a-tooltip(href=href target='hac' title="View lyric")= "#{index}. #{pname}"
      %a.a-tooltip(data-toggle="collapse" href="##{lyric_id}" aria-expanded="false" aria-controls=lyric_id title='Toggle Lyric')
        %i.fa.fa-level-down
    .sname= sentry[:sname]
    %h5
      %div(class=sclass)= sentry[:singer]
      %div(class=sclass)= pstyle.capitalize
      %div(class=sclass)= sentry[:key]
      %div(class=sclass)= sentry[:tempo]
      - soundfile = nil
      - if sentry[:lyric_url]
        - sname     = sentry[:name_k]
        - soundfile = "#{sname}.mp3"
        - start, stop = 0, 90
      - if soundfile && test(?s, "audio/intro-#{soundfile}")
        .pull-right
    %pre(style='font-size:60%')= (sentry[:perfnote] || "").force_encoding('UTF-8')
  - ptarget = "pad_#{index}"

  .col-md-3
    - if !params[:publish] && (value = sentry[:bk3_set])
      - pstring = value.to_s.gsub('/', '+')
      - pkey    = sentry[:key]
      %a.a-tooltip(class=sclass href='#' onclick="return send_patch('#{pstring}', '#{pkey}', '##{ptarget}')" title="Download patch")= value
    - if value = sentry[:play_url]
      - value.split(',').each do |aurl|
        %a.a-tooltip(href=aurl target='play_link' title="Listen to full song")
          %i.fa.fa-music
    - if soundfile && test(?s, "audio/intro-#{soundfile}")
      - ['intro', 'solo', 'p0', 'p1', 'p2', 'p3', 'p4'].each do |segment|
        - next unless test(?s, "audio/#{segment}-#{soundfile}")
        .small #{segment.capitalize}[T#{sentry[:skey]}]
        %audio.pull-right(controls loop)
          %source(src="/audio/#{segment}-#{soundfile}" type="audio/mpeg")

  .col-md-3
    - noteid = "note_#{index}"
    %div(class=sclass)= pstyle.capitalize
    %div(class=sclass)= sentry[:key]
    %div(class=sclass)= sentry[:singer]
    %div.vsmall(id=ptarget)

.row.prow
  .col-md-12
    .collapse(id=lyric_id style='column-count:2; text-align:center')
      - if lyric = sentry[:lyric]
        - lyric = lyric.split("\n").map{|l| l + "<br/>"}.join("\n")
        %p.text-primary.lyric= lyric.force_encoding('UTF-8')
      - else
        %p.small.text-muted= (sentry[:preview] || "")[0..100].force_encoding('UTF-8')
