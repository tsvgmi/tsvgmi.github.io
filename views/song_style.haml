:css
  audio:hover, audio:focus, audio:active {
    -webkit-box-shadow: 15px 15px 20px rgba(0,0, 0, 0.4);
    -moz-box-shadow: 15px 15px 20px rgba(0,0, 0, 0.4);
    box-shadow: 15px 15px 20px rgba(0,0, 0, 0.4);
    -webkit-transform: scale(1.05);
    -moz-transform: scale(1.05);
    transform: scale(1.05);
  }
  audio {
    -webkit-transition:all 0.5s linear;
    -moz-transition:all 0.5s linear;
    -o-transition:all 0.5s linear;
    transition:all 0.5s linear;
    -moz-box-shadow: 2px 2px 4px 0px #006773;
    -webkit-box-shadow:  2px 2px 4px 0px #006773;
    box-shadow: 2px 2px 4px 0px #006773;
    -moz-border-radius:7px 7px 7px 7px ;
    -webkit-border-radius:7px 7px 7px 7px ;
    border-radius:7px 7px 7px 7px ;
  }

- instrument = uperf_info[:instrument] || []
- ytvideo    = uperf_info[:ytvideo] || ""
- ytoffset   = uperf_info[:ytoffset] || ""
- smule      = uperf_info[:smule] || ""
- smkey      = uperf_info[:smkey] || ""
- nct        = uperf_info[:nct] || ""
- nctkey     = uperf_info[:nct] || ""
- videos     = []

%h2= song_info[:title]
%ul.list-inline
  %li.list-inline-item
    - if link = song_info[:link]
      %a(href=link target='playsong')= "#{song_info[:artist]} (#{song_info[:key]})"
    - else
      = "#{song_info[:artist]} (#{song_info[:song_key]})"
%form(action="/song-style" method="post")
  %input(type='hidden' name='user' value=user)
  %input(type='hidden' name='song_id' value=song_id)
  %input(type='hidden' name='song_name' value=song_name)
  .row
    .col-6
      .form-group
        %label(for='instrument') Instrument(s)
        %input.form-control#instrument(type='text' name='instrument' value="#{instrument}")
      .form-group
        %label(for='key') Key
        %input.form-control#key(type='text' name='key' value="#{uperf_info[:key]}")
      .form-group
        %label(for='intro') Other Notes (Intro/Out/Solo)
        %textarea.form-control#intro(name='intro' rows=5)
          = uperf_info[:intro]
    .col-6
      .form-group
        %label(for='ytvideo') Youtube ID, Start, Stop, ..., | ...
        %input.form-control#ytvideo(type='text' name='ytvideo' value="#{ytvideo}")
      .form-group
        %label(for='vidkey') Video Key (Youtube)
        %input.form-control#vidkey(type='text' name='vidkey' value="#{uperf_info[:vidkey]}")
      - if ytvideo && !ytvideo.empty?
        - ytvideo.split('|').each do |svideo|
          - video, *ytoffset = svideo.split(',')
          - ytoffset.each_slice(2) do |ytstart, ytend|
            - vid = "video_#{ytstart}_#{ytend}"
            - Plog.info(start:ytstart, end:ytend, vid:vid)
            %div(id=vid)
            - videos << {vid:vid, video:video, start:ytstart.to_i, end:ytend.to_i}
    .col-6
      .form-group
        %label(for='smvideo') Smule Record
        %input.form-control#smule(type='text' name='smule' value="#{smule}")
      .form-group
        %label(for='smkey') Video Key (Smule)
        %input.form-control#smkey(type='text' name='smkey' value="#{uperf_info[:smkey]}")
        - if smule && !smule.empty?
          %iframe(frameborder="0" width="100%" height="125" src="https://www.smule.com/recording/#{smule}/frame")

    .col-6
      .form-group
        %label(for='nctvideo') NCT Record
        %input.form-control#nct(type='text' name='nct' value="#{nct}")
      .form-group
        %label(for='nctkey') Video Key (NCT)
        %input.form-control#nctkey(type='text' name='nctkey' value="#{uperf_info[:nctkey]}")
        - if nct && !nct.empty?
          %iframe(frameborder="0" width="100%" height="125" src="https://www.nhaccuatui.com/mh/auto/#{nct}")

  .pull-right
    %button.btn.btn-sm.btn-primary(type="submit" name="Update" value=true) Update


- Plog.dump_info(videos:videos)
- content_for :javascript do
  %script(src="https://www.youtube.com/iframe_api")
  :javascript
    var videos     = #{videos.to_json};
    var cur_player = null;
    function onYouTubeIframeAPIReady() {
      for (var i = 0; i < videos.length; i++) {
        var cur_video = videos[i];
        var avideo    = cur_video['video'];
        var vid       = cur_video['vid'];
        var start     = cur_video['start'];
        var end       = cur_video['end'];
        var player    = new YT.Player(vid, {
          height: '140',
          width:  '100%',
          playerVars: {"autoplay":0, "start":start, "end":end,
                       "origin":"https://www.youtube.com"},
          videoId: avideo,
          events: {
            'onStateChange': function(event){
              var mplayer = event.target
              if (event.data == 0) {
                mdata  = mplayer.b.b;
                start  = mdata['playerVars']['start'];
                console.log(mdata);
                console.log('Restarting ' + mdata['videoId'] + ' ' + start);
                mplayer.seekTo(start);
                cur_player = mplayer.playVideo();
              }
            }
          }
        });
      }
    }
